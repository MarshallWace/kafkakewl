wait-for-file-at-startup {
  name = ""
  name = ${?WAIT_FOR_FILE_AT_STARTUP}
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  actor {
    debug {
      unhandled = on
    }
  }
}

akka.http.server {
  verbose-error-messages = on
  parsing {
    max-header-value-length = 32k
  }
}

kafkakewl-api-metrics {
  http-port: 8090
  http-port: ${?KAFKAKEWL_API_METRICS_HTTP_PORT}

  http-allowed-origins: ${?KAFKAKEWL_API_METRICS_HTTP_ALLOWED_ORIGINS}

  auth-plugin-name = "com.mwam.kafkakewl.extensions.builtin.SameUserAuthPlugin"
  auth-plugin-name = ${?KAFKAKEWL_API_METRICS_HTTP_AUTH_PLUGIN_NAME}

  // the current set of kafka-clusters and deployed topologies can come from the kafkakewl changelog if enabled
  changelog-store {
    kafka-cluster {
      brokers = ${?KAFKAKEWL_API_METRICS_BROKERS}
      security-protocol = ${?KAFKAKEWL_API_METRICS_SECURITY_PROTOCOL}
      kafka-client-config {
      }
      jaas-config = ${?KAFKAKEWL_API_METRICS_JAAS_CONFIG}
    }
    enabled = true
    enabled = ${?KAFKAKEWL_API_METRICS_CHANGELOG_ENABLED}
  }

  # or, for development, these kafka-clusters will always be monitored (NOTE that the metrics service won't be fully functional
  # because without consuming the changelog-store it won't know the sliding window sizes and possibly other config coming from the topologies)
  additional-kafka-clusters {
    clusters = [
    ]
    enabled = false
    enabled = ${?KAFKAKEWL_API_METRICS_ADDITIONAL_KAFKA_CLUSTERS_ENABLED}
  }

  polling {
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 32
      fixed-pool-size = ${?KAFKAKEWL_API_METRICS_POLLING_POOL_SIZE}
    }
  }

  topic-info-poller {
    delay-millis = 2000
    delay-millis = ${?KAFKAKEWL_API_METRICS_TOPIC_INFO_POLLER_DELAYMS}
    disabled-kafka-clusters = "",
    disabled-kafka-clusters = ${?KAFKAKEWL_API_METRICS_TOPIC_INFO_POLLER_DISABLED_KAFKA_CLUSTERS}
  }

  consumer-group-offsets {
    disabled-kafka-clusters = "",
    disabled-kafka-clusters = ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_DISABLED_KAFKA_CLUSTERS}

    excluded-consumer-groups-regexes = ""
    excluded-consumer-groups-regexes = ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_EXCLUDED_GROUP_REGEXES}

    poller {
      delay-millis = 2000
      delay-millis = ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_POLLER_DELAYMS}
    }

    consumer {
      compaction-millis: 1000
      compaction-millis: ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_CONSUMER_COMPACTION_MILLIS}
      threads-for-initial-load: 5
      threads-for-initial-load: ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_CONSUMER_THREADS_FOR_INITIAL_LOAD}
      threads-for-live-consumption: 1
      threads-for-live-consumption: ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_CONSUMER_THREADS_FOR_LIVE_CONSUMPTION}
      consumer-group: ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_CONSUMER_CONSUMER_GROUP}
      consumer-offsets-topic = "__consumer_offsets"
      consumer-offsets-topic = ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_TOPIC}
    }

    source = consumer
    source = ${?KAFKAKEWL_API_METRICS_CONSUMER_GROUP_OFFSETS_SOURCE}
  }

  lag-evaluating {
    default-window-minutes = 5
    default-window-fill-factor = 0.5
    default-window-fill-factor = ${?KAFKAKEWL_API_METRICS_LAG_WINDOW_FILL_FACTOR}
    consume-after-consumer-group-offset {
      enabled: false
      enabled: ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_ENABLED}
      max-topic-partition-lag-to-fix: 100
      max-topic-partition-lag-to-fix: ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_MAX_TOPICPARTITION_LAG_TO_FIX}
      excluded-topic-regexes: ""
      excluded-topic-regexes: ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_EXCLUDED_TOPIC_REGEXES}
      excluded-consumer-group-regexes: ""
      excluded-consumer-group-regexes: ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_EXCLUDED_CONSUMER_GROUP_REGEXES}
      number-of-workers: 10
      number-of-workers: ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_NUMBER_OF_WORKERS}
      poll-duration-millis = 100
      poll-duration-millis = ${?KAFKAKEWL_API_METRICS_CONSUME_AFTER_CONSUMER_GROUP_OFFSETS_POLL_DURATION_MILLIS}
    }
  }
}
